openapi: 3.0.3
info:
  title: Users API
  version: 1.0.0

paths:
  /api/v1/users/{id}:
    patch:
      summary: Update a user
      description: |
        Update user information by ID.  
        Requires a role with `UPDATE_USERS` permission to update other users, or `UPDATE_OWN_USER` permission to update your own user.  
        All fields in the request body are optional, but will be validated if provided.
      tags:
        - Users
      parameters:
        - in: path
          name: userID
          schema:
            type: integer
            example: 5
          required: true
          description: The ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                  description: Must be a non-empty string
                roleID:
                  type: integer
                  example: 2
                  description: Must be a number
                profilePhoto:
                  type: string
                  format: uri
                  example: "https://example.com/photo.jpg"
                  description: Must be a valid URL
                phone:
                  type: string
                  example: "1234567890"
                  description: Must be a valid phone number
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                  description: Must be a valid email
                shortDescriptionUS:
                  type: string
                  example: "There is always another secret"
                  description: Must be a non-empty string and max 80 characters
                shortDescriptionES:
                  type: string
                  example: "Siempre hay otro secreto"
                  description: Must be a non-empty string and max 80 characters
                jobTitle:
                  type: string
                  example: "Software developer"
                  description: Must be a non-empty string and max 60 characters
                publicProfile:
                  type: boolean
                  example: true
                  description: Must be a boolean
      responses:
        "200":
          description: User successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 4
                  rol_id:
                    type: integer
                    example: 2
                  username:
                    type: string
                    example: johndoe
                  password:
                    type: string
                    example: "****"
                  profile_photo:
                    type: string
                    example: https://example.com/photo.jpg
                  phone:
                    type: string
                    example: "1234567890"
                  email:
                    type: string
                    example: johndoe@example.com
                  short_description_us:
                    type: string
                    example: There is always another secret
                    nullable: true
                  short_description_es:
                    type: string
                    example: Siempre hay otro secreto
                    nullable: true
                  job_title:
                    type: string
                    example: Software developer
                  public:
                    type: boolean
                    example: true
                  deleted:
                    type: boolean
                    example: false
                  banned:
                    type: boolean
                    example: false
                  created_at:
                    type: string
                    format: date-time
                    example: 2025-08-16T11:26:24.513Z
                  updated_at:
                    type: string
                    format: date-time
                    example: 2025-08-16T11:26:24.513Z
                  pagination:
                    type: object
                    properties:
                      offset:
                        type: integer
                        example: 0
                      limit:
                        type: integer
                        example: 0
                      count:
                        type: integer
                        example: 0
                      total:
                        type: integer
                        example: 0

        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"

        "401":
          description: Missing or invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"

        "403":
          description: Forbidden, insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenPermissionError"

        "404":
          description: User with given ID does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotFoundError"

components:
  schemas:
    ValidationError:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid request
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: field
              value:
                type: string
                example: ""
              msg:
                type: string
                example: "username must be a string"
              path:
                type: string
                example: username
              location:
                type: string
                example: body
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 0
            count:
              type: integer
              example: 0
            total:
              type: integer
              example: 0

    UnauthorizedError:
      type: object
      properties:
        status:
          type: integer
          example: 401
        message:
          type: string
          example: You must provide a token
        data:
          type: array
          items:
            type: object
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 0
            count:
              type: integer
              example: 0
            total:
              type: integer
              example: 0

    ForbiddenPermissionError:
      type: object
      properties:
        status:
          type: integer
          example: 403
        message:
          type: string
          example: You shall not pass!
        data:
          type: array
          items:
            type: object
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 0
            count:
              type: integer
              example: 0
            total:
              type: integer
              example: 0

    UserNotFoundError:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message:
          type: string
          example: The user with the given id does not exist.
        data:
          type: array
          items:
            type: object
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 0
            count:
              type: integer
              example: 0
            total:
              type: integer
              example: 0
